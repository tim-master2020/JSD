import { Component, OnInit } from '@angular/core';
import { Validators, FormBuilder, FormGroup } from '@angular/forms';
import { ActivatedRoute, Router } from '@angular/router';
import { Service } from '../app.service';

@Component({
  selector: 'app-{{model.name}}-edit',
  templateUrl: './Edit{{model.name}}.component.html',
  styleUrls: []
})
export class Edit{{model.name}}Component implements OnInit {

  {{model.name}}:FormGroup;
  submitted = false;
  data: any;
  id:number;
  

  constructor(
    private service : Service,
    private formBuilder : FormBuilder,
    private router : Router,
    private activatedRoute : ActivatedRoute) { }

  ngOnInit() {
  
  	  this.activatedRoute.params.subscribe(params =>{
      this.id = params.{{model.name}}Id;
      });
  	  	
      this.{{model.name}} = this.formBuilder.group({
        {% for n in range(model.property['prop_name'] | length) %}
          {{model.property['prop_name'][n]}} :['', Validators.required],
        {% endfor %}
        })
      
      this.service.get{{model.name}}ById(this.id).subscribe(
      data => {
        this.data = data
        this.setValues();
      }
      );
  }

  setValues(){
    {% for n in range(model.property['prop_name'] | length) %}
      this.{{model.name}}.controls.{{model.property['prop_name'][n]}}.setValue(this.data.{{model.property['prop_name'][n]}});
    {% endfor %}}

  get f() { return this.{{model.name}}.controls; }

  onSubmit(event:any) {
    this.submitted = true;
    this.data = this.{{model.name}}.getRawValue();
    console.log(this.data)
    this.service.edit{{model.name}}(this.data,this.id).subscribe(
      data => {
    });
  }

}