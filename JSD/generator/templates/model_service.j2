package com.example.demo.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.*;
import org.springframework.stereotype.Service;

import com.example.demo.generated.service.{{model.name}}GeneratedService;
import com.example.demo.model.{{model.name}};
import com.example.demo.service.I{{model.name}}Service;
import com.example.demo.repository.{{model.name}}Repository;

import java.util.*;

@Service
public class {{model.name}}Service extends {{model.name}}GeneratedService implements I{{model.name}}Service  {
  
    @Autowired
    private {{model.name}}Repository {{model.name.lower()}}Repository;

    @Autowired
    private ModelMapper modelMapper;

    @Override
    public {{model.name}}DTO save({{model.name}}DTO {{model.name.lower()}}DTO) {
        {{model.name}} {{model.name.lower()}} = modelMapper.map({{model.name.lower()}}DTO,{{model.name}}.class);
        return {{model.name.lower()}}Repository.save({{model.name.lower()}});
    }

    @Override
    public List<{{model.name}}DTO> findAll() {
        ArrayList<{{model.name}}DTO> {{model.name.lower()}}List = new ArrayList<{{model.name}}DTO>();

        for({{model.name}} {{model.name.lower()}} : {{model.name.lower()}}Repository.findAll()){

            {{model.name.lower()}}List.add(modelMapper.map({{model.name.lower()}},{{model.name}}DTO.class));
        }

        return {{model.name.lower()}}List;
    }

    @Override
    public {{model.name}}DTO findById(long id){
        {{model.name}}DTO {{model.name.lower()}}DTO = modelMapper.map({{model.name.lower()}}Repository.findById(id),{{model.name}}DTO.class);
        return {{model.name.lower()}}DTO;
    }
    
    @Override
    public {{model.name}}DTO update(long id, {{model.name}}DTO {{model.name.lower()}}DTO) {
        {{model.name.lower()}}DTO.setId(id);
        {{model.name}} {{model.name.lower()}} = modelMapper.map({{model.name.lower()}}DTO,{{model.name}}.class);
        return {{model.name.lower()}}Repository.save({{model.name.lower()}});
    }

    @Override
    public void remove(long id) {
        {{model.name.lower()}}Repository.deleteById(id);
    }
}
